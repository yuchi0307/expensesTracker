{"version":3,"sources":["Components/Expenses/ExpensesDate.js","Components/UI/Card.js","Components/Expenses/ExpenseItem.js","Components/Expenses/ExpensesFilter.js","Components/Expenses/ExpensesList.js","Components/Chart/ChartBar.js","Components/Chart/Chart.js","Components/Expenses/ExpensesChart.js","Components/Expenses/MyExpenses.js","Components/NewExpense/ExpenseForm.js","Components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesDate","props","month","date","toLocaleString","year","getFullYear","day","className","Card","classes","children","ExpenseItem","title","amount","ExpensesFilter","onChange","event","onChaneFilter","target","value","myYear","ExpensesList","items","length","map","filterExpense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChar","charDataPoints","expenses","expense","getMonth","MyExpenses","useState","filteredYear","setFilteredYear","filteredExpense","data","filter","toString","SelectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","prop","onCancel","NewExpense","isEditing","setIsEditing","myExpenseData","random","onAddExpense","DUMMY_EXPENSE","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90b7a7db.chunk.js","sourcesContent":["import './ExpensesDate.css'\n\nconst ExpensesDate = (props) => {\n  const month = props.date.toLocaleString('zh-TW', { month: 'long' });\n  const year = props.date.getFullYear();\n  const day = props.date.toLocaleString('zh-TW', { day: '2-digit' });\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='.expense-date__day'>{day}</div>\n    </div>\n  );\n}\n\nexport default ExpensesDate;\n","import './Card.css'\n// 1. 作為可以重複利用的 wrapper ，在網頁開發通常稱之為 Card 。\n// 2. 欲將 Card 這個 component ( 客製化的 html tag ) 作為 opening closing tag，不像是一般的html可以直接讀懂class\n// 3. 利用 React 內建特別的 prop 讓他讀懂 html 的 attribute -> props.children\n// 4. 所有 component 都接收 props.children\n// 5. props.children 永遠代表其 opening closing tag之間的內容\n// 6. 為避免我客製化的 Card html tag 只讀得懂我給予他的css內容，他忘記去讀本身在ExpensesItem.js中的className='expense-item'\n    //必須多提醒他：const classes = 'card ' （我客製化的css className）+ props.className（原應有的）;\n    //注意！ 'card '結尾必須有空格否則無效\nconst Card = (props) => {\n    const classes = 'card ' + props.className;\n    return(\n    <div className={classes}>{props.children}</div>\n    )\n}\n\nexport default Card;","//import React, {useState} from 'react';\nimport './ExpensesDate.js';\nimport './ExpenseItem.css';\nimport Card from '../UI/Card.js';\nimport ExpensesDate from './ExpensesDate.js';\n\nconst ExpenseItem = (props) => {\n  //const [title, setTitle] = useState(props.title);\n\n  // const clickHandler = () =>{\n  //   setTitle('狗狗');\n  //   console.log(title)\n  // }\n\n  return (\n    <Card className='expense-item'>\n     <ExpensesDate date={props.date}/>\n      <div className='expense-item__description'>\n        <h2>{props.title}</h2>\n        <div className='expense-item__price'>${props.amount}</div>\n        {/* <button onClick={clickHandler}>change title</button> */}\n      </div>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n","import './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  \n  const dropdownChangeHandler = (event) => {\n    props.onChaneFilter(event.target.value)\n  }\n\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select \n        onChange = {dropdownChangeHandler}\n        value={props.myYear}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import  ExpenseItem from './ExpenseItem';\nimport './ExpensesList.css';\n\nconst ExpensesList = (props) =>{\n\n    if(props.items.length === 0){\n        return <h2 className='expenses-list__fallback'>No expense found.</h2>\n    }\n\n    return(\n        <ul className='expenses-list'>\n         {props.items.map((filterExpense) => (\n        <ExpenseItem\n          key={filterExpense.id}\n          title={filterExpense.title}\n          amount={filterExpense.amount}\n          date={filterExpense.date}\n        />\n      ))}  \n        </ul>\n    )\n}\n\n\nexport default ExpensesList;","import \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue ) * 100) + \"%\";\n  }\n  return (\n    <div className=\"char-bar\">\n      <div className=\"chart-bar__inner \">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n        {/* style wants a js obj as value */}\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import './Chart.css'\nimport ChartBar from './ChartBar'\n\nconst Chart = (props) => {\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value)\n    //將12個月的資料值都放入陣列dataPointValues[]中\n    const totalMaximum = Math.max(...dataPointValues)\nreturn(\n    <div className='chart'>\n        {props.dataPoints.map( dataPoint => <ChartBar \n        key = {dataPoint.label}\n        value = {dataPoint.value}\n        maxValue = {totalMaximum}\n        label = {dataPoint.label}\n        />)}\n    </div>\n)\n}\n\nexport default Chart;","import Chart from \"../Chart/Chart\";\n\nconst ExpensesChar = (props) =>{\n    const charDataPoints = [\n        {label: 'Jan', value: 0},\n        {label: 'Feb', value: 0},\n        {label: 'Mar', value: 0},\n        {label: 'Apr', value: 0},\n        {label: 'May', value: 0},\n        {label: 'Jun', value: 0},\n        {label: 'Jul', value: 0},\n        {label: 'Agu', value: 0},\n        {label: 'Sep', value: 0},\n        {label: 'Oct', value: 0},\n        {label: 'Nov', value: 0},\n        {label: 'Dec', value: 0}\n    ]\n\n    for(const expense of props.expenses){\n        const expenseMonth = expense.date.getMonth(); //一月是[0]\n        charDataPoints[expenseMonth].value += expense.amount;\n    }\n    return <Chart dataPoints={charDataPoints}/>\n\n}\n\nexport default ExpensesChar;","import \"./ExpenseItem\";\nimport \"./MyExpenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChar from \"./ExpensesChart\";\n\nconst MyExpenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n  const ChangeHandler = (SelectedYear) => {\n    setFilteredYear(SelectedYear);\n  };\n\n  const filteredExpense = props.data.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <div>\n      \n        <Card className=\"expenses\">\n          <ExpensesFilter myYear={filteredYear} onChaneFilter={ChangeHandler} />\n          <ExpensesChar expenses={filteredExpense}/>\n          <ExpensesList items={filteredExpense} />\n        </Card>\n      \n    </div>\n  );\n};\n\nexport default MyExpenses;\n","import React, { useState } from 'react';\n\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(''); //一開始欄位都是空白，所以給空字串\n  const [enteredAmount, setEnteredAmount] = useState(''); //即便輸入的看似是數字，但型態依舊是字串\n  const [enteredDate, setEnteredDate] = useState('');\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: '',\n  // });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // 如果要用到先前的 state 值，最好使用這個寫法 \n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // });\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: event.target.value,\n    // });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault(); //和發送 request 有關的js\n    \n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate), //輸入的日期是字串，把它轉成date物件\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n    //按下送出表單後清空欄位\n    \n  };\n\n  const cancel = (prop) =>{\n    props.onCancel()\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='new-expense__controls'>\n        <div className='new-expense__control'>\n          <label>Title</label>\n          <input type='text' \n          value={enteredTitle} \n          onChange={titleChangeHandler} />\n        </div>\n        <div className='new-expense__control'>\n          <label>Amount</label>\n          <input\n            type='number'\n            min='1'\n            step='1'\n            value={enteredAmount} //不只可以監聽輸入欄位，還可以在 sumbit 後將值清空\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Date</label>\n          <input\n            type='date'\n            min='2019-01-01'\n            max='2022-12-31'\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className='new-expense__actions'>\n        <button type='button' onClick={cancel}>Cancel</button> \n        <button type='submit'>Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;","import {useState} from 'react';\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = (props) =>{\n    const saveExpenseDataHandler = (myExpenseData) => {\n        const expenseData = {\n            ...myExpenseData,\n            id: Math.random().toString()\n        };\n        props.onAddExpense(expenseData);\n        setIsEditing(false); //交出表單後也想關起來\n    };\n\n    const [isEditing, setIsEditing]= useState(false)\n    const startEditingHandler = () => {\n        setIsEditing(true)\n    }\n    const CancelHandler = (props) => {\n        setIsEditing(false)\n    }\n\n    return(\n        <div className='new-expense'>\n            {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n            {/* 若成立 &＆ 顯示後方邏輯*/}\n           {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={CancelHandler}/>}\n        </div>\n    )\n}\n\nexport default NewExpense;\n","// import ExpenseItem from './Components/ExpenseItem';\nimport MyExpenses from \"./Components/Expenses/MyExpenses\";\nimport NewExpense from \"./Components/NewExpense/NewExpense\";\nimport { useState } from \"react\";\nconst DUMMY_EXPENSE = [\n  {\n    id: \"e1\",\n    title: \"iPad Air 4\",\n    amount: 11533,\n    date: new Date(2020, 10, 14),\n  },\n  { \n    id: \"e2\", \n    title: \"iPad\", \n    amount: 20000, \n    date: new Date(2021, 2, 7) \n  },\n  {\n    id: \"e3\",\n    title: \"apple pecncil\",\n    amount: 2500,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"AirPods Pro\",\n    amount: 7990,\n    date: new Date(2021, 5, 12),\n  },\n];\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSE);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <MyExpenses data={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}