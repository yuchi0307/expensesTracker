{"ast":null,"code":"var _jsxFileName = \"/Users/yuqi/Downloads/01-starting-setup/src/Components/Expenses/MyExpenses.js\",\n    _s = $RefreshSig$();\n\nimport \"./ExpenseItem\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./MyExpenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyExpenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n\n  const ChangeHandler = SelectedYear => {\n    setFilteredYear(SelectedYear);\n  };\n\n  const filteredExpense = props.data.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expenseContents = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expense found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }, this);\n\n  if (filteredExpense.length > 0) {\n    filteredExpense.map(filterExpense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: filterExpense.title,\n      amount: filterExpense.amount,\n      date: filterExpense.date\n    }, filterExpense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        myYear: filteredYear,\n        onChaneFilter: ChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), expenseContents]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyExpenses, \"mdIsaHWtxuZbTDv6nUGN/ApvXr0=\");\n\n_c = MyExpenses;\nexport default MyExpenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyExpenses\");","map":{"version":3,"sources":["/Users/yuqi/Downloads/01-starting-setup/src/Components/Expenses/MyExpenses.js"],"names":["ExpenseItem","Card","ExpensesFilter","useState","MyExpenses","props","filteredYear","setFilteredYear","ChangeHandler","SelectedYear","filteredExpense","data","filter","expense","date","getFullYear","toString","expenseContents","length","map","filterExpense","title","amount","id"],"mappings":";;;AAAA,OAAO,eAAP;AACA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAO,kBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,MAAD,CAAhD;;AACA,QAAMK,aAAa,GAAIC,YAAD,IAAkB;AACtCF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAGL,KAAK,CAACM,IAAN,CAAWC,MAAX,CAAmBC,OAAD,IAAa;AACrD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;AACD,GAFuB,CAAxB;;AAIA,MAAIW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AACA,MAAIP,eAAe,CAACQ,MAAhB,GAAyB,CAA7B,EAAgC;AAC9BR,IAAAA,eAAe,CAACS,GAAhB,CAAqBC,aAAD,iBAClB,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,aAAa,CAACC,KAFvB;AAGE,MAAA,MAAM,EAAED,aAAa,CAACE,MAHxB;AAIE,MAAA,IAAI,EAAEF,aAAa,CAACN;AAJtB,OACOM,aAAa,CAACG,EADrB;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAED,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,cAAD;AAAgB,QAAA,MAAM,EAAEjB,YAAxB;AAAsC,QAAA,aAAa,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGS,eAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA9BD;;GAAMb,U;;KAAAA,U;AAgCN,eAAeA,UAAf","sourcesContent":["import \"./ExpenseItem\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./MyExpenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\n\nconst MyExpenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n  const ChangeHandler = (SelectedYear) => {\n    setFilteredYear(SelectedYear);\n  };\n\n  const filteredExpense = props.data.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expenseContents = <p>No expense found.</p>\n  if( filteredExpense.length > 0 ){\n    filteredExpense.map((filterExpense) => (\n      <ExpenseItem\n        key={filterExpense.id}\n        title={filterExpense.title}\n        amount={filterExpense.amount}\n        date={filterExpense.date}\n      />\n    ))\n  }\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter myYear={filteredYear} onChaneFilter={ChangeHandler} />\n        {expenseContents}\n      </Card>\n    </div>\n  );\n};\n\nexport default MyExpenses;\n"]},"metadata":{},"sourceType":"module"}