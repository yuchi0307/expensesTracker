{"ast":null,"code":"var _jsxFileName = \"/Users/yuqi/Downloads/01-starting-setup/src/Components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport \"./ExpenseForm.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = () => {\n  _s();\n\n  const [enteredTitle, setEnteredTitle] = useState(''); //一開始欄位都是空白，所以給空字串\n\n  const [enteredAmount, setEnteredAmount] = useState(''); //即便輸入的看似是數字，但型態依舊是字串\n\n  const [enteredDate, setEnteredDate] = useState(''); // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: ''\n  // });\n\n  const titleChangeHandler = event => {\n    //setEnteredTitle(event.target.value);\n\n    /*setUserInput({\n      ...userInput,\n      enteredTitle: event.target.value\n      //在 react 中，這個 state 被更新了，若沒有顧及其他兩個物件，新的 state 將不會保留就有的其他物件\n      //所以將更新 state 時，用...userInput先保留所有物件，再 override title，以此類推\n    });*/\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredTitle: event.target.value\n      };\n    });\n  };\n\n  const amountChangeHandler = event => {\n    //setEnteredAmount(event.target.value);\n    setUserInput({ ...userInput,\n      enteredAmount: event.target.value\n    });\n  };\n\n  const dateChangeHandler = event => {\n    //setEnteredDate(event.target.value);\n    setUserInput({ ...userInput,\n      enteredDate: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          step: \"1\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2020-03-07\",\n          max: \"2025-03-07\",\n          onChanege: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new_expense__actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/Users/yuqi/Downloads/01-starting-setup/src/Components/NewExpense/ExpenseForm.js"],"names":["useState","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","setUserInput","prevState","target","value","amountChangeHandler","userInput","dateChangeHandler"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,EAAD,CAAhD,CAFuB,CAE+B;;AACtD,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,EAAD,CAAlD,CAHuB,CAGiC;;AACxD,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C,CAJuB,CAKxB;AACA;AACA;AACA;AACA;;AAEA,QAAMQ,kBAAkB,GAAIC,KAAD,IAAU;AACnC;;AACA;AACJ;AACA;AACA;AACA;AACA;AAEIC,IAAAA,YAAY,CAAEC,SAAD,IAAa;AACxB,aAAM,EAAE,GAAGA,SAAL;AAAgBT,QAAAA,YAAY,EAAEO,KAAK,CAACG,MAAN,CAAaC;AAA3C,OAAN;AACD,KAFW,CAAZ;AAGD,GAZD;;AAcA,QAAMC,mBAAmB,GAAIL,KAAD,IAAW;AACrC;AACAC,IAAAA,YAAY,CAAC,EACX,GAAGK,SADQ;AAEXX,MAAAA,aAAa,EAAEK,KAAK,CAACG,MAAN,CAAaC;AAFjB,KAAD,CAAZ;AAID,GAND;;AAQA,QAAMG,iBAAiB,GAAIP,KAAD,IAAW;AACnC;AACAC,IAAAA,YAAY,CAAC,EACX,GAAGK,SADQ;AAEXT,MAAAA,WAAW,EAAEG,KAAK,CAACG,MAAN,CAAaC;AAFf,KAAD,CAAZ;AAKD,GAPD;;AASA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEL;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,GAAG,EAAC,GAAzB;AAA6B,UAAA,IAAI,EAAC,GAAlC;AAAsC,UAAA,QAAQ,EAAEM;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,GAAG,EAAC,YAAvB;AAAoC,UAAA,GAAG,EAAC,YAAxC;AAAqD,UAAA,SAAS,EAAEE;AAAhE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAaE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA/DD;;GAAMf,W;;KAAAA,W;AAiEN,eAAeA,WAAf","sourcesContent":["import \"./ExpenseForm.css\";\nimport { useState } from \"react\";\n\nconst ExpenseForm = () => {\n\n   const [enteredTitle, setEnteredTitle] = useState(''); //一開始欄位都是空白，所以給空字串\n   const [enteredAmount, setEnteredAmount] = useState(''); //即便輸入的看似是數字，但型態依舊是字串\n   const [enteredDate, setEnteredDate] = useState('');\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: ''\n  // });\n\n  const titleChangeHandler = (event) =>{\n    //setEnteredTitle(event.target.value);\n    /*setUserInput({\n      ...userInput,\n      enteredTitle: event.target.value\n      //在 react 中，這個 state 被更新了，若沒有顧及其他兩個物件，新的 state 將不會保留就有的其他物件\n      //所以將更新 state 時，用...userInput先保留所有物件，再 override title，以此類推\n    });*/\n\n    setUserInput((prevState)=>{\n      return{ ...prevState, enteredTitle: event.target.value };\n    })\n  };\n\n  const amountChangeHandler = (event) => {\n    //setEnteredAmount(event.target.value);\n    setUserInput({\n      ...userInput,\n      enteredAmount: event.target.value\n    });\n  };\n\n  const dateChangeHandler = (event) => {\n    //setEnteredDate(event.target.value);\n    setUserInput({\n      ...userInput,\n      enteredDate: event.target.value\n    })\n\n  }\n\n  return (\n    <form>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\" onChange={titleChangeHandler}/>\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input type=\"number\" min=\"0\" step=\"1\" onChange={amountChangeHandler}/>\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input type=\"date\" min=\"2020-03-07\" max=\"2025-03-07\" onChanege={dateChangeHandler}/>\n        </div>\n        <div className=\"new_expense__actions\">\n          <button type=\"submit\">Add expense</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n"]},"metadata":{},"sourceType":"module"}